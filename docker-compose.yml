version: '3.8'

# This compose file is compatible with both docker-compose and podman-compose
# AMI-ORCHESTRATOR uses Podman by default for enhanced security and rootless containers
# To use: podman-compose -f docker-compose.yml up -d

services:
  # Only include services not already running on the host to avoid port conflicts.
  # Existing containers detected via `podman ps`:
  #  - redis (6379)
  #  - pgvector (5432)
  #  - dgraph (8080/9080)
  # This compose starts MongoDB only, mapped to 27017.

  mongo:
    image: mongo:7
    container_name: ami-orchestrator-mongo-1
    environment:
      MONGO_INITDB_ROOT_USERNAME: x
      MONGO_INITDB_ROOT_PASSWORD: x
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 10s
      retries: 30
