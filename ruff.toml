line-length = 160
target-version = "py311"

[lint]
# Comprehensive rule set replacing pylint + bandit
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "S",   # flake8-bandit (security)
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "PL",  # pylint
    "A",   # flake8-builtins
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate (remove commented code)
    "PIE", # flake8-pie
    "T20", # flake8-print
    "Q",   # flake8-quotes
]

[lint.mccabe]
max-complexity = 10

[lint.pylint]
max-args = 16
max-locals = 64
max-statements = 96
max-branches = 16

[lint.per-file-ignores]
# Root-level test files
"**/test_*.py" = ["S101", "PLR2004", "ARG002"]  # Asserts, magic values, and unused pytest fixtures
"tests/**/*.py" = ["S101", "PLR2004", "S603", "S607", "ARG002", "E402", "PLC0415", "S108", "T201", "B007"]  # Tests require asserts, magic values, subprocess, unused fixtures, bootstrap imports, lazy imports, temp files, print statements, unused loop vars
"tests/fixtures/**/*.py" = ["ALL"]  # Test fixtures intentionally contain violations
"tests/conftest.py" = ["S603", "S607", "E402"]  # Docker/subprocess in test fixtures, bootstrap imports
"tests/integration/**/*.py" = ["S603", "S607", "E402"]  # Subprocess in integration tests, bootstrap imports
"conftest.py" = ["E402"]  # Bootstrap imports after path setup

# Root-level scripts
"scripts/**/*.py" = ["T201", "S603", "S607", "E402", "PLC0415"]  # CLI tools - print() required for user output, subprocess, bootstrap imports, lazy imports
"scripts/automation/**/*.py" = ["T201", "S603", "S607", "PLC0415", "S108"]  # CLI automation tools - print, subprocess, lazy imports, temp files
"scripts/automation/tests/**/*.py" = ["S101", "PLR2004", "S603", "S607", "ARG002", "E402", "PLC0415", "S108", "T201", "B007"]  # Test files
"scripts/run_tests.py" = ["T201", "S603", "S607", "E402", "PLC0415"]  # Test runner - CLI output, subprocess, bootstrap imports, lazy imports
"module_setup.py" = ["S603", "S607", "E402"]  # UV subprocess calls in setup script, bootstrap imports

# Root backend code
"backend/**/*.py" = ["E402", "S603", "S607"]  # Bootstrap imports after path setup, subprocess for git/system commands

# Documentation and learning examples
"docs/**/*.py" = ["T201", "S603", "S607", "E402"]  # Example code may use print/subprocess
"learning/**/*.py" = ["T201", "S603", "S607", "E402"]  # Learning examples may use print/subprocess

# Root-level utility files
"demo.py" = ["T201", "E402"]  # Demo script with print output
"install.py" = ["T201", "S603", "S607", "E402"]  # Installation script with print and subprocess

[format]
line-ending = "auto"
quote-style = "double"
