# AMI Automation Configuration
version: "2.0.0"

# Environment
environment: "${AMI_ENV:development}"

# Paths (all relative to ORCHESTRATOR_ROOT)
paths:
  logs: "logs"
  config: "config"
  cache: ".cache"

# Logging
logging:
  level: "INFO"
  format: "json"
  retention_days: 90

  # Transcript archival (per Claude Code docs)
  transcripts:
    enabled: true
    path: "logs/transcripts/{date:%Y-%m-%d}"
    compress: true

# Hooks (loaded from hooks.yaml)
hooks:
  file: "scripts/config/hooks.yaml"
  timeout: 30
  parallel: false

# Claude Code CLI settings (abstraction layer in code)
claude_cli:
  command: "claude"
  model_default: "claude-sonnet-4-5"
  model_audit: "claude-sonnet-4-5"  # 100% accuracy requirement

# MCP Servers (Model Context Protocol)
mcp:
  enabled: true
  servers:
    browser:
      command: "ami-run"
      args:
        - "{root}/browser/scripts/run_chrome.py"
        - "--data-root"
        - "{root}/browser/data"
    # Future: add more MCP servers as needed
    # database:
    #   command: "python3"
    #   args:
    #     - "{root}/database/scripts/mcp_server.py"

# Prompts
prompts:
  dir: "scripts/config/prompts"
  agent: "agent.txt"
  audit: "audit.txt"
  audit_diff: "audit_diff.txt"
  consolidate: "consolidate.txt"
  task_worker: "task_worker.txt"
  task_moderator: "task_moderator.txt"
  sync_worker: "sync_worker.txt"
  sync_moderator: "sync_moderator.txt"
  completion_moderator: "completion_moderator.txt"

# Response Scanner
response_scanner:
  completion_moderator_enabled: true  # Validate completion markers with moderator

# Audit
audit:
  patterns_dir: "scripts/config/patterns"
  parallel: true
  workers: 4
  cache:
    enabled: true
    storage: ".cache/audit"
    ttl: 3600

  scanning:
    include_patterns:
      - "**/*.py"
      - "**/*.js"
      - "**/*.ts"

    exclude_patterns:
      - "**/node_modules/**"
      - "**/__pycache__/**"
      - "**/.*"
      - "**/dist/**"
      - "**/build/**"
      - "**/venv/**"
      - "**/.venv/**"
      - "**/ux/ui-concept/**"

# Task Execution
tasks:
  parallel: false  # Sequential by default (async when true)
  workers: 4  # Parallel worker count (when parallel=true)
  timeout_per_task: 3600  # 1 hour max per task
  moderator_enabled: true  # Validate with moderator after worker completion

  include_patterns:
    - "**/*.md"

  exclude_patterns:
    - "**/README.md"
    - "**/CLAUDE.md"
    - "**/AGENTS.md"
    - "**/feedback-*.md"
    - "**/progress-*.md"
    - "**/node_modules/**"
    - "**/.git/**"
    - "**/.venv/**"
    - "**/venv/**"
    - "**/__pycache__/**"
    - "**/*.egg-info/**"
    - "**/.cache/**"
    - "**/.pytest_cache/**"
    - "**/.mypy_cache/**"
    - "**/.ruff_cache/**"
    - "**/dist/**"
    - "**/build/**"
    - "**/ux/ui-concept/**"

# Git Sync
sync:
  timeout: 1800  # 30 minutes max per module
  moderator_enabled: true  # Validate with moderator after worker completion
